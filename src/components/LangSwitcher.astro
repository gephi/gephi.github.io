---
import languages from "@cospired/i18n-iso-languages";
import { readdir } from "fs/promises";
import path, { basename } from "path";
import astroConfig from "../../astro.config.mjs";

interface Props {
  fromPath: string;
}
const { fromPath } = Astro.props;

// locales config
const defaultLocale = astroConfig.i18n?.defaultLocale;

// compute relativePath to the page directory
const pathTest = fromPath.match(new RegExp(/^(.*)\/([a-z]{2,3})\/?$/));
const [pagePath, currentLocale] = pathTest ? pathTest.slice(1, 3) : [fromPath, defaultLocale];
const relativePath = `./src/pages${pagePath}`;

// list and test existing localized astro pages
const files = await readdir(path.join(process.cwd(), relativePath));
const alternativeLangs = files
  .map((f) => {
    // is this file a country code 2
    const groups = basename(f).match(new RegExp(`^([a-z]{2,3}).astro$`, "i"));
    // match + its country code
    if (groups !== null && languages.getName(groups[1], "en") !== undefined) return groups[1];
    else {
      if (basename(f) === "index.astro") return defaultLocale;
      else return null;
    }
  })
  .filter((f): f is string => f !== currentLocale && f !== null);
---

{
  pagePath && !!alternativeLangs.length && (
    <div class="text-muted text-end">
      This page exists in other languages:
      <div class="d-flex gap-1 justify-content-end">
        {alternativeLangs.map((al) => (
          <span>
            {/* link to local: default is on index */}
            <a href={path.join(pagePath, al === defaultLocale ? "" : al)}>{languages.getName(al, al)}</a>
          </span>
        ))}
      </div>
    </div>
  )
}
