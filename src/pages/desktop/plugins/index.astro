---
import { Image } from "astro:assets";
import { isNil, reverse, sortBy } from "lodash-es";
import Banner from "../../../components/Banner.astro";
import Default from "../../../images/plugins/default-screenshot.jpg";
import Layout from "../../../layouts/Layout.astro";
import { PluginsFilters } from "./PluginsFilters";
import type { Plugin } from "./type";
import { pluginElementId } from "./utils";

const pluginsDataRequest = await fetch(
  "https://raw.githubusercontent.com/gephi/gephi-plugins/refs/heads/gh-pages/plugins/plugins.json",
);

const pluginsData: Plugin[] | null = pluginsDataRequest.ok
  ? reverse(sortBy((await pluginsDataRequest.json()).plugins as Plugin[], (p) => new Date(p.last_update)))
  : null;
---

<Layout pageId="desktop-plugins">
  <Banner>
    <h1>Gephi plugins</h1>
  </Banner>

  <main class="plugins-main">
    {
      pluginsData === null ? (
        <h2>Sorry plugins data could not be loaded</h2>
      ) : (
        <>
          <PluginsFilters plugins={pluginsData} client:only />

          <section class="plugins-list-container container-fluid">
            <h2 id="plugins-list-total">
              {pluginsData.length || "No"} {pluginsData.length > 1 ? "plugins" : "plugin"}
            </h2>
            <div class="plugins-list row">
              {pluginsData.map((p) => (
                <article
                  id={pluginElementId(p.id)}
                  class={`category-${p.category} ${p.versions ? Object.keys(p.versions).map((v) => `version-${v}`) : ""}`}
                >
                  <a class="card" href={`/desktop/plugins/${p.id}`}>
                    {!isNil(p.images) && p.images[0] !== undefined ? (
                      <Image
                        inferSize
                        alt=""
                        class="card-img-top plugin-image"
                        layout="constrained"
                        src={`https://raw.githubusercontent.com/gephi/gephi-plugins/refs/heads/gh-pages/plugins/${p.images[0].image}`}
                      />
                    ) : (
                      <Image alt="" class="card-img-top plugin-image" layout="constrained" src={Default} />
                    )}
                    <div>
                      <small class="plugin-category">{p.category}</small>
                    </div>
                    <h3 class="plugin-name">{p.name}</h3>
                    <p class="plugin-description">{p.short_description}</p>
                    <div class="text-muted">last updated on {p.last_update}</div>
                    <div class="plugin-versions">
                      {Object.keys(p.versions)
                        .reverse()
                        .map((v) => (
                          <span>{v}</span>
                        ))}
                    </div>
                  </a>
                </article>
              ))}
            </div>
          </section>
        </>
      )
    }
  </main>
</Layout>
